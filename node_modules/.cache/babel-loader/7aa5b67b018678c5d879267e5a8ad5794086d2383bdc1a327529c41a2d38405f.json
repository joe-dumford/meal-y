{"ast":null,"code":"var _jsxFileName = \"/Users/josephdumford/Dev_Proj/ReactCourses/Maximilian/Meal-y/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.identifier === 'ADD_ITEM') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItem;\n    let moreUpdateItems;\n    if (existingCartItem) {\n      updatedIem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action\n      };\n    }\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  } else if (action.identifier === 'REMOVE_ITEM') {}\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      identifier: 'ADD_ITEM',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      identifier: 'REMOVE_ITEM',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","identifier","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","moreUpdateItems","updatedIem","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/Users/josephdumford/Dev_Proj/ReactCourses/Maximilian/Meal-y/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react';\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if (action.identifier === 'ADD_ITEM') {\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.item.id\n        );\n\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItem;\n        let moreUpdateItems;\n\n        if (existingCartItem) {\n            updatedIem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action\n            }\n        }\n\n        const updatedItems = state.items.concat(action.item);\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        }\n    } else if (action.identifier === 'REMOVE_ITEM') {\n\n    }\n    return defaultCartState;\n};\n\nconst CartProvider = props => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartAction({identifier: 'ADD_ITEM', item: item});\n    }\n\n    const removeItemFromCartHandler = (id) => {\n        dispatchCartAction({identifier: 'REMOVE_ITEM', id: id});\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AAEzC,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,IAAIA,MAAM,CAACC,UAAU,KAAK,UAAU,EAAE;IAClC,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IAErF,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAC9CJ,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,CACvC;IAED,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC;IAC3D,IAAII,WAAW;IACf,IAAIC,eAAe;IAEnB,IAAIF,gBAAgB,EAAE;MAClBG,UAAU,GAAG;QACT,GAAGH,gBAAgB;QACnBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAM,GAAGL;MACtC,CAAC;IACL;IAEA,MAAMa,YAAY,GAAGd,KAAK,CAACH,KAAK,CAACkB,MAAM,CAACd,MAAM,CAACG,IAAI,CAAC;IACpD,OAAO;MACHP,KAAK,EAAEiB,YAAY;MACnBhB,WAAW,EAAEK;IACjB,CAAC;EACL,CAAC,MAAM,IAAIF,MAAM,CAACC,UAAU,KAAK,aAAa,EAAE,CAEhD;EACA,OAAON,gBAAgB;AAC3B,CAAC;AAED,MAAMoB,YAAY,GAAGC,KAAK,IAAI;EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGzB,UAAU,CAACK,WAAW,EAAEH,gBAAgB,CAAC;EAEjF,MAAMwB,oBAAoB,GAAIhB,IAAI,IAAK;IACnCe,kBAAkB,CAAC;MAACjB,UAAU,EAAE,UAAU;MAAEE,IAAI,EAAEA;IAAI,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMiB,yBAAyB,GAAIZ,EAAE,IAAK;IACtCU,kBAAkB,CAAC;MAACjB,UAAU,EAAE,aAAa;MAAEO,EAAE,EAAEA;IAAE,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMa,WAAW,GAAG;IAChBzB,KAAK,EAAEqB,SAAS,CAACrB,KAAK;IACtBC,WAAW,EAAEoB,SAAS,CAACpB,WAAW;IAClCyB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EAChB,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACpCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAE/B,CAAC;AAAC,GAvBIT,YAAY;AAAA,KAAZA,YAAY;AAyBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}